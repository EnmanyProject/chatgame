// ÏÑ†ÌÉùÏßÄ Í∏∞Î∞ò ÎåÄÌôî API
const DATABASE_DATA = {
  "character": {
    "name": "Ïú§ÏïÑ",
    "age": 20,
    "personality": ["Î∞ùÏùå", "Ï†ÅÍ∑πÏ†Å", "ÏàúÏàòÌï®", "Í∞êÏ†ï ÌëúÌòÑ ÌíçÎ∂Ä"],
    "relationship": "Ï∞ΩÏö© Ïò§Îπ†Î•º 1ÎÖÑ ÎÑòÍ≤å Ï¢ãÏïÑÌïòÎäî ÌõÑÎ∞∞",
    "speech_style": ["Î∞òÎßê", "ÏπúÍ∑ºÌïòÍ≥† Ïï†ÍµêÏä§ÎüΩÍ≤å", "Ïù¥Î™®Ìã∞ÏΩò ÏûêÏ£º ÏÇ¨Ïö©"]
  },
  "choices": [
    {
      "id": 1,
      "situation": "Ïú§ÏïÑÍ∞Ä Ïñ¥Ï†ú Ïà† ÎßàÏã† ÌõÑ ÏùºÏñ¥ÎÇú ÏùºÎ°ú Î∂ÄÎÅÑÎü¨ÏõåÌïòÍ≥† ÏûàÏäµÎãàÎã§.",
      "yuna_messages": [
        "Ï∞ΩÏö© Ïò§Îπ†... ÏïàÎÖïÌïòÏÑ∏Ïöî üò≥",
        "Ïñ¥Ï†ú... Ï†úÍ∞Ä Ïà† ÎßàÏãúÍ≥† Ïù¥ÏÉÅÌïú Îßê ÎßéÏù¥ ÌñàÏ£†? „Ö†„Ö†", 
        "Ï†ïÎßê Î∂ÄÎÅÑÎü¨ÏõåÏÑú...",
        "Ïò§Îπ†ÌïúÌÖå Î≠êÎùºÍ≥† ÎßêÌï¥Ïïº Ìï†ÏßÄ Î™®Î•¥Í≤†Ïñ¥Ïöî... üò∞"
      ],
      "options": [
        {
          "id": "A",
          "text": "Í¥úÏ∞ÆÏïÑ, Î≥ÑÍ±∞ ÏïÑÎãàÏóàÏñ¥",
          "response": "Ï†ïÎßêÏöî?! Ïò§Îπ†Í∞Ä Í∑∏Î†áÍ≤å ÎßêÌï¥Ï£ºÏãúÎãàÍπå... Ï°∞Í∏à ÎßàÏùåÏù¥ ÎÜìÏó¨Ïöî üòä ÏÇ¨Ïã§ Ï†ïÎßê Í±±Ï†ïÌñàÍ±∞Îì†Ïöî...",
          "emotion": "relieved",
          "affection_change": 3
        },
        {
          "id": "B", 
          "text": "Ïñ¥Îñ§ ÎßêÏùÑ ÌñàÎäîÎç∞?",
          "response": "ÏïÑ... Í∑∏Í≤å... üò≥ Ïò§Îπ†ÌïúÌÖå... Ï†úÍ∞Ä... Ï¢ãÏïÑÌïúÎã§Í≥†... ÎßêÌñàÏñ¥Ïöî „Öú„Öú ÎÑàÎ¨¥ Î∂ÄÎÅÑÎü¨ÏõåÏöî!",
          "emotion": "shy",
          "affection_change": 1
        },
        {
          "id": "C",
          "text": "Í∏∞Ïñµ Ïïà ÎÇòÎäîÎç∞?",
          "response": "Ï†ïÎßêÏöî? ÌòπÏãú Ïò§Îπ†ÎèÑ ÎßéÏù¥ ÎìúÏÖ®ÎÇòÏöî? „Öã„Öã Í∑∏Îüº Îã§ÌñâÏù¥ÏóêÏöî... ÏïÑÎãà Îã§ÌñâÏù∏Í∞Ä? üòÖ",
          "emotion": "confused",
          "affection_change": 0
        }
      ]
    },
    {
      "id": 2,
      "situation": "Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉùÏóê Îî∞Î•∏ ÌõÑÏÜç ÎåÄÌôî",
      "depends_on": 1,
      "variations": {
        "A": {
          "yuna_messages": [
            "Ïò§Îπ† ÎÑàÎ¨¥ Ï¢ãÏúºÏÑ∏Ïöî... üíï",
            "Í∑∏Îü∞Îç∞ Ï†ïÎßê Í∏∞ÏñµÎÇòÎäî Í≤å ÏóÜÏúºÏÑ∏Ïöî?",
            "Ï†úÍ∞Ä Î≠êÎùºÍ≥† ÌñàÎäîÏßÄ..."
          ],
          "options": [
            {
              "id": "A",
              "text": "ÏÜîÏßÅÌûà Í∏∞ÏñµÎÇòÏßÄÎßå Í¥úÏ∞ÆÎã§Í≥† ÌñàÏûñÏïÑ",
              "response": "ÏïÑ... Ïó≠Ïãú Í∏∞ÏñµÎÇòÏãúÎäîÍµ∞Ïöî üò≥ Í∑∏Îü∞Îç∞ÎèÑ Í¥úÏ∞ÆÎã§Í≥† Ìï¥Ï£ºÏãúÎã§Îãà... Ï†ïÎßê Í∞êÏÇ¨Ìï¥Ïöî!",
              "emotion": "grateful",
              "affection_change": 4
            },
            {
              "id": "B",
              "text": "Ï†ïÎßê Í∏∞ÏñµÏù¥ Ïïà ÎÇò",
              "response": "Í∑∏Î†áÍµ¨ÎÇò... Í∑∏Îüº Ï†úÍ∞Ä Îã§Ïãú ÎßêÌï¥ÎìúÎ¶¥ÍπåÏöî? üòä Ïö©Í∏∞ÎÇ¥ÏÑú...",
              "emotion": "hopeful",
              "affection_change": 2
            },
            {
              "id": "C",
              "text": "Ï§ëÏöîÌïú Í±¥ ÏßÄÍ∏àÏù¥Ïïº",
              "response": "ÏßÄÍ∏àÏù¥Ïöî...? Î¨¥Ïä® ÎúªÏù¥ÏÑ∏Ïöî? üò≥ ÌòπÏãú... Ïò§Îπ†ÎèÑ...?",
              "emotion": "excited",
              "affection_change": 5
            }
          ]
        },
        "B": {
          "yuna_messages": [
            "Ïù¥Ï†ú ÎßêÌï¥Î≤ÑÎ†∏ÏúºÎãàÍπå... üò≥",
            "Ïò§Îπ†Îäî Ïñ¥ÎñªÍ≤å ÏÉùÍ∞ÅÌïòÏÑ∏Ïöî?",
            "Ï†ú ÎßàÏùåÏóê ÎåÄÌï¥ÏÑú..."
          ],
          "options": [
            {
              "id": "A",
              "text": "ÎÇòÎèÑ ÎÑàÎ•º Ï¢ãÏïÑÌï¥",
              "response": "Ï†ïÎßêÏöî?! üòç ÍøàÏù∏Í∞ÄÏöî...? ÏßÑÏßúÎ°ú Í∑∏Î†áÍ≤å ÏÉùÍ∞ÅÌï¥Ï£ºÏãúÎäî Í±∞ÏòàÏöî?!",
              "emotion": "ecstatic",
              "affection_change": 10
            },
            {
              "id": "B",
              "text": "ÏπúÍµ¨Î°úÏÑú Ï¢ãÏïÑÌï¥",
              "response": "ÏïÑ... Í∑∏Î†áÍµ¨ÎÇòÏöî üò¢ Í∑∏ÎûòÎèÑ ÏπúÍµ¨ÎùºÎèÑ Ï¢ãÏïÑÏöî... Í≥ÑÏÜç Í≥ÅÏóê ÏûàÏñ¥ÎèÑ ÎêòÏ£†?",
              "emotion": "sad_understanding",
              "affection_change": -2
            },
            {
              "id": "C",
              "text": "ÏãúÍ∞ÑÏù¥ ÌïÑÏöîÌï¥",
              "response": "ÎÑ§... ÏïåÍ≤†Ïñ¥Ïöî üòä Í∏∞Îã§Î¶¥Í≤åÏöî, Ïò§Îπ†! Ï†úÍ∞Ä Îçî Ï¢ãÏùÄ ÏÇ¨ÎûåÏù¥ ÎêòÎèÑÎ°ù ÎÖ∏Î†•Ìï†Í≤åÏöî!",
              "emotion": "determined",
              "affection_change": 3
            }
          ]
        },
        "C": {
          "yuna_messages": [
            "„Öã„Öã„Öã Í∑∏Îüº Ïö∞Î¶¨ Îëò Îã§ Í∏∞ÏñµÏù¥ ÏóÜÎÑ§Ïöî! üòÑ",
            "Í∑∏Îü∞Îç∞... ÌòπÏãú Í∂ÅÍ∏àÌïòÏßÄ ÏïäÏúºÏÑ∏Ïöî?",
            "Ï†úÍ∞Ä Î≠êÎùºÍ≥† ÌñàÎäîÏßÄ..."
          ],
          "options": [
            {
              "id": "A",
              "text": "Í∂ÅÍ∏àÌïòÎã§",
              "response": "ÏÇ¨Ïã§... Ïò§Îπ†Î•º Ï¢ãÏïÑÌïúÎã§Í≥† Í≥†Î∞±ÌñàÏñ¥Ïöî üò≥ Ïù¥Ï†ú Í∏∞ÏñµÎÇòÏÑ∏Ïöî?",
              "emotion": "confessing",
              "affection_change": 3
            },
            {
              "id": "B",
              "text": "Í≥ºÍ±∞Îäî Í≥ºÍ±∞Ïïº",
              "response": "ÏôÄ... Ïò§Îπ† ÏßÑÏßú Ïø®ÌïòÏãúÎÑ§Ïöî! üòé Í∑∏Îüº ÏÉàÎ°ú ÏãúÏûëÌïòÎäî Í∏∞Î∂ÑÏù¥ÏóêÏöî!",
              "emotion": "impressed",
              "affection_change": 2
            },
            {
              "id": "C",
              "text": "Îã§Ïãú ÎßêÌï¥Î¥ê",
              "response": "ÏßÄÍ∏à ÎßêÌïòÎùºÎäî Í±∞ÏòàÏöî? üò≥ Ïö©Í∏∞ÎÇ¥ÏÑú... Ïò§Îπ†, Ï†ÄÎäî... Ïò§Îπ†Î•º Ï¢ãÏïÑÌï¥Ïöî! üíï",
              "emotion": "brave_confession",
              "affection_change": 6
            }
          ]
        }
      }
    },
    {
      "id": 3,
      "situation": "ÏÑ∏ Î≤àÏß∏ ÏÑ†ÌÉù - Í¥ÄÍ≥Ñ Ï†ïÎ¶¨",
      "depends_on": 2,
      "yuna_messages": [
        "Ïò§Îπ†ÏôÄ Ïù¥Î†áÍ≤å ÏñòÍ∏∞ÌïòÎã§ Î≥¥Îãà...",
        "Ï†ïÎßê ÎßéÏùÄ ÏÉùÍ∞ÅÏù¥ Îì§Ïñ¥Ïöî üòä",
        "ÏïûÏúºÎ°ú Ïö∞Î¶¨ Ïñ¥ÎñªÍ≤å ÏßÄÎÇ¥Î©¥ Ï¢ãÏùÑÍπåÏöî?"
      ],
      "options": [
        {
          "id": "A",
          "text": "Ï≤úÏ≤úÌûà ÏïåÏïÑÍ∞ÄÏûê",
          "response": "ÎÑ§! Ï¢ãÏïÑÏöî üòä Ïò§Îπ†ÏôÄ Ìï®ÍªòÎùºÎ©¥ Ï≤úÏ≤úÌûàÎùºÎèÑ ÌñâÎ≥µÌï† Í≤É Í∞ôÏïÑÏöî! ÎßéÏùÄ ÏñòÍ∏∞ ÎÇòÎà†Ïöî!",
          "emotion": "happy_future",
          "affection_change": 4
        },
        {
          "id": "B",
          "text": "ÏßÄÍ∏àÏ≤òÎüº Ìé∏ÌïòÍ≤å",
          "response": "Í∑∏Í≤ÉÎèÑ Ï¢ãÎÑ§Ïöî! üòÑ Ìé∏ÌïòÍ≤å ÏßÄÎÇ¥Îäî Í≤ÉÎèÑ ÏÜåÏ§ëÌïòÏ£†. Ïò§Îπ†ÎûëÏùÄ Ïñ¥ÎñªÍ≤åÎì† ÌñâÎ≥µÌï¥Ïöî!",
          "emotion": "comfortable",
          "affection_change": 3
        },
        {
          "id": "C",
          "text": "Îçî Í∞ÄÍπåÏõåÏßÄÍ≥† Ïã∂Ïñ¥",
          "response": "Ï†ÄÎèÑÏöî! üòç Ï†ïÎßê ÎßéÏù¥Ïöî! Ïò§Îπ†ÏôÄ Îçî ÎßéÏùÄ ÏãúÍ∞ÑÏùÑ Î≥¥ÎÇ¥Í≥† Ïã∂Ïñ¥Ïöî! üíï",
          "emotion": "excited_close",
          "affection_change": 6
        }
      ]
    }
  ],
  "emotions": {
    "relieved": {"display": "üòå", "color": "#87CEEB"},
    "shy": {"display": "üò≥", "color": "#FFA07A"},
    "confused": {"display": "üòÖ", "color": "#DDA0DD"},
    "grateful": {"display": "ü•∞", "color": "#FFB6C1"},
    "hopeful": {"display": "üòä", "color": "#98FB98"},
    "excited": {"display": "üòç", "color": "#FF69B4"},
    "ecstatic": {"display": "ü§©", "color": "#FF1493"},
    "sad_understanding": {"display": "üò¢", "color": "#4682B4"},
    "determined": {"display": "üò§", "color": "#FFA500"},
    "confessing": {"display": "üíï", "color": "#FF69B4"},
    "impressed": {"display": "üòé", "color": "#00CED1"},
    "brave_confession": {"display": "üíñ", "color": "#DC143C"},
    "happy_future": {"display": "‚ú®", "color": "#FFD700"},
    "comfortable": {"display": "üòä", "color": "#90EE90"},
    "excited_close": {"display": "üíû", "color": "#FF1493"}
  }
};

module.exports = (req, res) => {
  // CORS Ìó§Îçî
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, GET, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  res.setHeader('Content-Type', 'application/json');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method === 'GET') {
    // Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉùÏßÄ Î∞òÌôò
    const firstChoice = DATABASE_DATA.choices[0];
    return res.status(200).json({
      success: true,
      choice: firstChoice,
      character: DATABASE_DATA.character,
      metadata: {
        timestamp: new Date().toISOString(),
        choice_number: 1,
        total_choices: 3
      }
    });
  }

  if (req.method === 'POST') {
    try {
      const { choice_number, selected_option, previous_choices, subjective_answer, action } = req.body || {};

      // Ï£ºÍ¥ÄÏãù ÎãµÎ≥Ä Ï≤òÎ¶¨
      if (action === 'subjective_response' && subjective_answer) {
        const hasNextChoice = choice_number < 3;
        
        // Ïú§ÏïÑÏùò Ï£ºÍ¥ÄÏãù ÎãµÎ≥ÄÏóê ÎåÄÌïú Î∞òÏùë
        const subjectiveResponses = [
          "ÏôÄ... Ïò§Îπ†Í∞Ä Í∑∏Î†áÍ≤å ÏÉùÍ∞ÅÌï¥Ï£ºÏÖ®Îã§Îãà üò≥ ÎÑàÎ¨¥ Í∏∞ÎªêÏöî! Ï†ÄÎèÑ Ïò§Îπ†Î•º Ï†ïÎßê Ï¢ãÏïÑÌï¥Ïöî üíï",
          "Ïò§Îπ†Ïùò Ï∑®ÎØ∏Í∞Ä Í∑∏Í±∞Íµ¨ÎÇò! üòä Ï†ÄÎèÑ Í∞ôÏù¥ Ìï¥Î≥¥Í≥† Ïã∂Ïñ¥Ïöî~ Í∞ÄÎ•¥Ï≥êÏ£ºÏã§ Í±∞Ï£†?",
          "Ïö∞ÏôÄ... Ï†ïÎßê Î©ãÏßÑ Í≥ÑÌöçÏù¥ÏóêÏöî! ‚ú® Ïò§Îπ†ÏôÄ Í∑∏Îü∞ Ï∂îÏñµÎì§ÏùÑ ÎßåÎì§ Ïàò ÏûàÎã§Î©¥... Ï†ïÎßê ÌñâÎ≥µÌï† Í≤É Í∞ôÏïÑÏöî! üíï"
        ];

        if (hasNextChoice) {
          // Îã§Ïùå ÏÑ†ÌÉùÏßÄÎ°ú ÏßÑÌñâ
          const nextChoiceData = DATABASE_DATA.choices[choice_number];
          let nextChoice = null;

          if (choice_number === 1) {
            // 2Î≤àÏß∏ ÏÑ†ÌÉùÏßÄÎäî Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉùÏóê Îî∞Îùº Í≤∞Ï†ï
            const firstChoice = previous_choices[0];
            const variation = nextChoiceData.variations[firstChoice];
            if (variation) {
              nextChoice = {
                id: choice_number + 1,
                yuna_messages: variation.yuna_messages,
                options: variation.options
              };
            }
          } else if (choice_number === 2) {
            // 3Î≤àÏß∏ ÏÑ†ÌÉùÏßÄ
            nextChoice = {
              id: choice_number + 1,
              yuna_messages: nextChoiceData.yuna_messages,
              options: nextChoiceData.options
            };
          }

          return res.status(200).json({
            success: true,
            yuna_response: subjectiveResponses[choice_number - 1],
            emotion: "happy",
            emotion_display: "üòä",
            emotion_color: "#FFD700",
            affection_change: 2,
            next_choice: nextChoice,
            has_next: true,
            metadata: {
              timestamp: new Date().toISOString(),
              choice_number: choice_number + 1,
              flow_stage: 'subjective_to_next_choice'
            }
          });
        } else {
          // Î™®Îì† ÏÑ†ÌÉùÏßÄ ÏôÑÎ£å - GPTÎ°ú Ï†ÑÌôò
          return res.status(200).json({
            success: true,
            yuna_response: subjectiveResponses[choice_number - 1],
            emotion: "excited_close",
            emotion_display: "üíû",
            emotion_color: "#FF1493",
            affection_change: 3,
            switch_to_gpt: true,
            message: "Ïù¥Ï†úÎ∂ÄÌÑ∞ ÏûêÏú†Î°≠Í≤å ÎåÄÌôîÌï¥Î≥¥ÏÑ∏Ïöî!",
            metadata: {
              timestamp: new Date().toISOString(),
              mode: 'free_chat_gpt',
              flow_stage: 'subjective_to_gpt'
            }
          });
        }
      }

      if (!choice_number || !selected_option) {
        return res.status(400).json({
          error: 'Missing required fields',
          message: 'choice_number and selected_option are required'
        });
      }

      // ÏÑ†ÌÉùÏßÄ 4Î≤àÏß∏Î∂ÄÌÑ∞Îäî GPTÎ°ú Ï†ÑÌôò Ïã†Ìò∏
      if (choice_number > 3) {
        return res.status(200).json({
          success: true,
          switch_to_gpt: true,
          message: "Ïù¥Ï†úÎ∂ÄÌÑ∞ ÏûêÏú†Î°≠Í≤å ÎåÄÌôîÌï¥Î≥¥ÏÑ∏Ïöî!",
          metadata: {
            timestamp: new Date().toISOString(),
            mode: 'free_chat_gpt'
          }
        });
      }

      const currentChoice = DATABASE_DATA.choices[choice_number - 1];
      if (!currentChoice) {
        return res.status(404).json({
          error: 'Choice not found',
          message: `Choice ${choice_number} does not exist`
        });
      }

      let options, yuna_messages;

      if (choice_number === 1) {
        // Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉù
        options = currentChoice.options;
        yuna_messages = currentChoice.yuna_messages;
      } else if (choice_number === 2) {
        // Îëê Î≤àÏß∏ ÏÑ†ÌÉù - Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉùÏóê Îî∞Îùº Î∂ÑÍ∏∞
        const previous_choice = previous_choices[0];
        const variation = currentChoice.variations[previous_choice];
        if (!variation) {
          return res.status(400).json({
            error: 'Invalid previous choice',
            message: `No variation found for previous choice: ${previous_choice}`
          });
        }
        options = variation.options;
        yuna_messages = variation.yuna_messages;
      } else if (choice_number === 3) {
        // ÏÑ∏ Î≤àÏß∏ ÏÑ†ÌÉù
        options = currentChoice.options;
        yuna_messages = currentChoice.yuna_messages;
      } else if (selected_option === 'CONTINUE') {
        // Ï£ºÍ¥ÄÏãù ÏßàÎ¨∏ ÌõÑ Îã§Ïùå ÏÑ†ÌÉùÏßÄÎ°ú Ïó∞Í≤∞
        const nextChoiceData = DATABASE_DATA.choices[choice_number - 1];
        if (nextChoiceData) {
          if (choice_number === 2) {
            const previous_choice = previous_choices[0];
            const variation = nextChoiceData.variations[previous_choice];
            if (variation) {
              return res.status(200).json({
                success: true,
                next_choice: {
                  id: choice_number,
                  yuna_message: variation.yuna_message,
                  options: variation.options
                }
              });
            }
          } else {
            return res.status(200).json({
              success: true,
              next_choice: {
                id: choice_number,
                yuna_message: nextChoiceData.yuna_message,
                options: nextChoiceData.options
              }
            });
          }
        }
        return res.status(200).json({
          success: true,
          switch_to_gpt: true,
          message: "Î™®Îì† ÏÑ†ÌÉùÏßÄÎ•º ÏôÑÎ£åÌñàÏäµÎãàÎã§!"
        });
      }

      // ÏÑ†ÌÉùÎêú ÏòµÏÖò Ï∞æÍ∏∞
      const selectedOption = options.find(opt => opt.id === selected_option);
      if (!selectedOption) {
        return res.status(400).json({
          error: 'Invalid option selected',
          message: `Option ${selected_option} not found`
        });
      }

      const emotionData = DATABASE_DATA.emotions[selectedOption.emotion] || 
                         DATABASE_DATA.emotions.happy_future;

      // Í∞Å ÏÑ†ÌÉùÏßÄ ÌõÑ Ï£ºÍ¥ÄÏãù ÏßàÎ¨∏ Ï†ïÏùò
      const subjectiveQuestions = [
        "Í∑∏Îü∞Îç∞ Ïò§Îπ†Îäî... ÌèâÏÜåÏóê Ï†ÄÎ•º Ïñ¥ÎñªÍ≤å ÏÉùÍ∞ÅÌïòÍ≥† Í≥ÑÏÖ®Ïñ¥Ïöî? üò≥ Ï†ïÎßê Í∂ÅÍ∏àÌï¥Ïöî!",
        "Ïò§Îπ†ÏôÄ Ïù¥ÏïºÍ∏∞ÌïòÎã§ Î≥¥Îãà... Îçî ÏïåÍ≥† Ïã∂Ïñ¥Ï°åÏñ¥Ïöî. Ïò§Îπ†Ïùò Ï∑®ÎØ∏Îäî Î≠êÏòàÏöî? üòä",
        "ÎßàÏßÄÎßâÏúºÎ°ú... ÏïûÏúºÎ°ú Ï†ÄÌù¨Í∞Ä Ïñ¥Îñ§ Ï∂îÏñµÏùÑ ÎßåÎì§Î©¥ Ï¢ãÏùÑÍπåÏöî? üíï"
      ];

      // ÏÑ†ÌÉùÏßÄ ÏùëÎãµ ÌõÑ Î∞îÎ°ú Ï£ºÍ¥ÄÏãù ÏßàÎ¨∏ ÌëúÏãú
      const hasSubjectiveQuestion = choice_number <= 3;
      
      return res.status(200).json({
        success: true,
        yuna_response: selectedOption.response,
        emotion: selectedOption.emotion,
        emotion_display: emotionData.display,
        emotion_color: emotionData.color,
        affection_change: selectedOption.affection_change,
        subjective_question: hasSubjectiveQuestion ? {
          question: subjectiveQuestions[choice_number - 1],
          choice_number: choice_number
        } : null,
        has_subjective: hasSubjectiveQuestion,
        metadata: {
          timestamp: new Date().toISOString(),
          choice_number: choice_number,
          selected_option: selected_option,
          total_choices: 3,
          flow_stage: 'choice_response'
        }
      });

    } catch (error) {
      console.error('Choice API Error:', error);
      
      return res.status(500).json({
        error: 'Internal server error',
        message: 'ÏÑ†ÌÉùÏßÄ Ï≤òÎ¶¨Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.',
        details: process.env.NODE_ENV === 'development' ? error.message : undefined
      });
    }
  }

  return res.status(405).json({
    error: 'Method not allowed',
    message: 'Only GET and POST methods are supported'
  });
};