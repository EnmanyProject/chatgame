// ÏÑ†ÌÉùÏßÄ Í∏∞Î∞ò ÎåÄÌôî API
const DATABASE_DATA = {
  "character": {
    "name": "Ïú§ÏïÑ",
    "age": 20,
    "personality": ["Î∞ùÏùå", "Ï†ÅÍ∑πÏ†Å", "ÏàúÏàòÌï®", "Í∞êÏ†ï ÌëúÌòÑ ÌíçÎ∂Ä"],
    "relationship": "ÏãúÏö∞ Ïò§Îπ†Î•º 1ÎÖÑ ÎÑòÍ≤å Ï¢ãÏïÑÌïòÎäî ÌõÑÎ∞∞",
    "speech_style": ["Î∞òÎßê", "ÏπúÍ∑ºÌïòÍ≥† Ïï†ÍµêÏä§ÎüΩÍ≤å", "Ïù¥Î™®Ìã∞ÏΩò ÏûêÏ£º ÏÇ¨Ïö©"]
  },
  "choices": [
    {
      "id": 1,
      "situation": "Ïú§ÏïÑÍ∞Ä Ìï¥Ïû•Íµ≠ÏùÑ ÎÅìÏó¨Ï£ºÎü¨ ÏôîÏäµÎãàÎã§.",
      "yuna_messages": [
        "Ïò§Îπ†~ ÏùºÏñ¥ÎÇòÏÑ∏Ïöî! üòä",
        "Ïñ¥Ï†ú ÎßéÏù¥ ÎìúÏÖ®Ï£†? „Öã„Öã",
        "Ìï¥Ïû•Íµ≠ ÎÅìÏó¨ÏôîÏñ¥Ïöî!",
        "ÏñºÎ•∏ ÏùºÏñ¥ÎÇòÏÑú ÎìúÏÑ∏Ïöî~ üòã"
      ],
      "options": [
        {
          "id": "A",
          "text": "Í≥†ÎßàÏõå, Ïú§ÏïÑÏïº",
          "response": "Ìó§Ìó§~ Î≥ÑÍ±∞ ÏïÑÎãàÏóêÏöî! üòä Ïò§Îπ†Í∞Ä ÏïÑÌååÎ≥¥Ïù¥ÎãàÍπå Í±±Ï†ïÎêêÏñ¥Ïöî.",
          "emotion": "happy",
          "affection_change": 2
        },
        {
          "id": "B", 
          "text": "ÏïÑÏßÅ Ï°∏Î†§...",
          "response": "Ïïà ÎèºÏöî~ üò§ ÏãùÍ∏∞ Ï†ÑÏóê ÎìúÏÖîÏïº Ìï¥Ïöî! ÏùºÏñ¥ÎÇòÏÑ∏Ïöî!",
          "emotion": "playful",
          "affection_change": 1
        },
        {
          "id": "C",
          "text": "Ïñ∏Ï†ú ÏôîÏñ¥?",
          "response": "Î∞©Í∏à Ï†ÑÏóê ÏôîÏñ¥Ïöî! üòã Ïò§Îπ† Ïû†Îì† Í±∞ Î≥¥Í≥† Ï°∞Ïö©Ìûà Ìï¥Ïû•Íµ≠ ÎÅìÏòÄÏñ¥Ïöî~",
          "emotion": "caring",
          "affection_change": 1
        }
      ]
    },
    {
      "id": 2,
      "situation": "Ìï¥Ïû•Íµ≠ÏùÑ Î®πÏúºÎ©∞ ÎåÄÌôîÍ∞Ä Í≥ÑÏÜçÎê©ÎãàÎã§.",
      "depends_on": 1,
      "variations": {
        "A": {
          "yuna_messages": [
            "Í∑∏ÎûòÎèÑ Ïò§Îπ†Í∞Ä Ï¢ãÏïÑÌï¥Ï£ºÏãúÎãàÍπå Í∏∞ÎªêÏöî! üòä",
            "Ïù¥ Ìï¥Ïû•Íµ≠ÏùÄ Ïö∞Î¶¨ ÏóÑÎßà Î†àÏãúÌîºÏòàÏöî~",
            "Ïñ¥ÎïåÏöî? ÎßõÏûàÏñ¥Ïöî?"
          ],
          "options": [
            {
              "id": "A",
              "text": "Ï†ïÎßê ÎßõÏûàÏñ¥, Í≥†ÎßàÏõå",
              "response": "Ìó§Ìó§~ Îã§ÌñâÏù¥ÏóêÏöî! üòç ÏóÑÎßàÍ∞Ä Í∞ÄÎ•¥Ï≥êÏ£ºÏã† ÎπÑÎ≤ïÏù¥ ÏûàÍ±∞Îì†Ïöî!",
              "emotion": "proud",
              "affection_change": 2
            },
            {
              "id": "B",
              "text": "ÎÑàÎèÑ Í∞ôÏù¥ Î®πÏùÑÎûò?",
              "response": "Ï†ÄÏöî? üò≥ Ï¢ãÏïÑÏöî! Ïò§Îπ†Îûë Í∞ôÏù¥ Î®πÏúºÎ©¥ Îçî ÎßõÏûàÏùÑ Í≤É Í∞ôÏïÑÏöî~",
              "emotion": "shy_happy",
              "affection_change": 2
            },
            {
              "id": "C",
              "text": "ÏóÑÎßà Î†àÏãúÌîºÍµ¨ÎÇò",
              "response": "ÎÑ§! üòä ÎÇòÏ§ëÏóê Ïò§Îπ†ÌïúÌÖåÎèÑ Í∞ÄÎ•¥Ï≥êÎìúÎ¶¥Í≤åÏöî. Î∞∞Ïö∞Í≥† Ïã∂ÏúºÏÑ∏Ïöî?",
              "emotion": "excited",
              "affection_change": 1
            }
          ]
        },
        "B": {
          "yuna_messages": [
            "ÏïÑ... ÏïÑÏßÅ Ïû†Ïù¥ Îçú Íπ®ÏÖ®ÎÇòÎ¥êÏöî üòÖ",
            "Í∑∏Îüº Ï†úÍ∞Ä Ïò§Îπ† Íπ®ÏõåÎìúÎ¶¥Í≤åÏöî!",
            "Ïñ¥ÎñªÍ≤å ÌïòÎ©¥ Ï¢ãÏùÑÍπåÏöî?"
          ],
          "options": [
            {
              "id": "A",
              "text": "ÏïåÍ≤†Ïñ¥, ÏùºÏñ¥ÎÇ†Í≤å",
              "response": "ÏôÄ! üòç ÎìúÎîîÏñ¥ ÏùºÏñ¥ÎÇòÏÖ®ÎÑ§Ïöî! Ìï¥Ïû•Íµ≠ Îπ®Î¶¨ ÎìúÏÑ∏Ïöî~",
              "emotion": "excited",
              "affection_change": 2
            },
            {
              "id": "B",
              "text": "5Î∂ÑÎßå Îçî...",
              "response": "Ïïà ÎèºÏöî! üò§ Ìï¥Ïû•Íµ≠Ïù¥ ÏãùÏñ¥Ïöî! Ï†ïÎßê ÎßõÏûàÎäîÎç∞ ÏïÑÍπåÏõåÏöî~",
              "emotion": "pouty",
              "affection_change": 1
            },
            {
              "id": "C",
              "text": "ÎÑ§Í∞Ä Íπ®ÏõåÏ§ò",
              "response": "ÎÑ§? üò≥ Ïñ¥... Ïñ¥ÎñªÍ≤åÏöî? Ïò§Îπ† Ïñ¥Íπ® ÌùîÎì§Ïñ¥ÎìúÎ¶¥ÍπåÏöî?",
              "emotion": "shy",
              "affection_change": 2
            }
          ]
        },
        "C": {
          "yuna_messages": [
            "ÏïÑÍπå Ï†ÑÏù¥Ïöî! üòã",
            "Ïò§Îπ† ÏûêÍ≥† Í≥ÑÏã§ Îïå Î™∞Îûò Îì§Ïñ¥ÏôÄÏÑú~",
            "Ï°∞Ïö©Ìûà Ìï¥Ïû•Íµ≠ ÎÅìÏòÄÏñ¥Ïöî!"
          ],
          "options": [
            {
              "id": "A",
              "text": "Î™∞Îûò Îì§Ïñ¥ÏôîÎã§Í≥†?",
              "response": "ÏïÑ... Ï£ÑÏÜ°Ìï¥Ïöî üòÖ Î¨∏ Ïó¥Î†§ÏûàÍ∏∏Îûò... Ïò§Îπ† ÏïÑÌîà Í≤É Í∞ôÏïÑÏÑú Í±±Ï†ïÎêêÍ±∞Îì†Ïöî!",
              "emotion": "apologetic",
              "affection_change": 1
            },
            {
              "id": "B",
              "text": "Í≥†ÏÉù ÎßéÏïòÍ≤†Îã§",
              "response": "ÏïÑÎãàÏóêÏöî! üòä Ïò§Îπ†Î•º ÏúÑÌï¥ÏÑúÎùºÎ©¥ Ï†ÑÌòÄ Í≥†ÏÉùÏù¥ ÏïÑÎãàÏóêÏöî~",
              "emotion": "happy",
              "affection_change": 2
            },
            {
              "id": "C",
              "text": "Ï†ïÎßê Ï∞©ÌïòÎã§",
              "response": "Ìó§Ìó§... üò≥ Ïò§Îπ†Í∞Ä Í∑∏Î†áÍ≤å ÎßêÌï¥Ï£ºÏãúÎãàÍπå Í∏∞ÎªêÏöî! Îçî ÏûòÌï¥ÎìúÎ¶¥Í≤åÏöî!",
              "emotion": "shy_happy",
              "affection_change": 2
            }
          ]
        }
      }
    },
    {
      "id": 3,
      "situation": "Ìï¥Ïû•Íµ≠ÏùÑ Îã§ Î®πÍ≥† ÎßàÎ¨¥Î¶¨ ÎåÄÌôî",
      "depends_on": 2,
      "yuna_messages": [
        "Ìï¥Ïû•Íµ≠ Îã§ ÎìúÏÖ®ÎÑ§Ïöî! üòä",
        "Í∏∞Î∂ÑÏù¥ Ï¢Ä ÎÇòÏïÑÏßÄÏÖ®Ïñ¥Ïöî?",
        "Ïò§Îπ† Î™∏ Í¥ÄÎ¶¨ Ïûò Ìï¥Ïïº Ìï¥Ïöî!"
      ],
      "options": [
        {
          "id": "A",
          "text": "ÎçïÎ∂ÑÏóê ÏôÑÏ†ÑÌûà ÎÇòÏïòÏñ¥",
          "response": "Ï†ïÎßêÏöî?! üòç Îã§ÌñâÏù¥ÏóêÏöî! Ïú§ÏïÑÍ∞Ä ÎßåÎì† Ìï¥Ïû•Íµ≠ Ìö®Í≥ºÍ∞Ä ÏûàÎÑ§Ïöî~",
          "emotion": "proud",
          "affection_change": 2
        },
        {
          "id": "B",
          "text": "ÏûêÏ£º ÏôÄÏÑú Ìï¥Ï§ò",
          "response": "ÎÑ§! üòä Ïñ∏Ï†úÎì†ÏßÄ ÎßêÏîÄÌïòÏÑ∏Ïöî! Ïò§Îπ† ÏïÑÌîå ÎïåÎßàÎã§ Îã¨Î†§Ïò¨Í≤åÏöî!",
          "emotion": "happy",
          "affection_change": 2
        },
        {
          "id": "C",
          "text": "ÎÑà ÎïåÎ¨∏Ïóê Îçî ÏïÑÌîà Í≤É Í∞ôÏïÑ",
          "response": "ÎÑ§? üò≥ ÏôúÏöî...? ÌòπÏãú Ï†úÍ∞Ä Î≠îÍ∞Ä ÏûòÎ™ªÌñàÎÇòÏöî? ÏïÑÎãàÎ©¥... Îã§Î•∏ ÏùòÎØ∏Ïù∏Í∞ÄÏöî?",
          "emotion": "confused",
          "affection_change": 1
        }
      ]
    }
  ],
  "emotions": {
    "happy": {"display": "üòä", "color": "#FFD700"},
    "playful": {"display": "üò§", "color": "#87CEEB"},
    "caring": {"display": "ü•∞", "color": "#FFB6C1"},
    "proud": {"display": "üòç", "color": "#FF69B4"},
    "shy_happy": {"display": "üòäüò≥", "color": "#FFB6C1"},
    "excited": {"display": "ü§ó", "color": "#FF6347"},
    "pouty": {"display": "üò§", "color": "#FFA500"},
    "shy": {"display": "üò≥", "color": "#FFA07A"},
    "apologetic": {"display": "üòÖ", "color": "#DDA0DD"},
    "confused": {"display": "üòï", "color": "#DDA0DD"},
    "relieved": {"display": "üòå", "color": "#87CEEB"},
    "grateful": {"display": "ü•∞", "color": "#FFB6C1"},
    "hopeful": {"display": "üòä", "color": "#98FB98"},
    "ecstatic": {"display": "ü§©", "color": "#FF1493"},
    "sad_understanding": {"display": "üò¢", "color": "#4682B4"},
    "determined": {"display": "üò§", "color": "#FFA500"},
    "confessing": {"display": "üíï", "color": "#FF69B4"},
    "impressed": {"display": "üòé", "color": "#00CED1"},
    "brave_confession": {"display": "üíñ", "color": "#DC143C"},
    "happy_future": {"display": "‚ú®", "color": "#FFD700"},
    "comfortable": {"display": "üòä", "color": "#90EE90"},
    "excited_close": {"display": "üíû", "color": "#FF1493"}
  }
};

module.exports = (req, res) => {
  // CORS Ìó§Îçî
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, GET, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  res.setHeader('Content-Type', 'application/json');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method === 'GET') {
    // Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉùÏßÄ Î∞òÌôò
    const firstChoice = DATABASE_DATA.choices[0];
    return res.status(200).json({
      success: true,
      choice: firstChoice,
      character: DATABASE_DATA.character,
      metadata: {
        timestamp: new Date().toISOString(),
        choice_number: 1,
        total_choices: 3
      }
    });
  }

  if (req.method === 'POST') {
    try {
      const { choice_number, selected_option, previous_choices, subjective_answer, action } = req.body || {};

      // Ï£ºÍ¥ÄÏãù ÎãµÎ≥Ä Ï≤òÎ¶¨
      if (action === 'subjective_response' && subjective_answer) {
        const hasNextChoice = choice_number < 3;
        
        // Ïú§ÏïÑÏùò Ï£ºÍ¥ÄÏãù ÎãµÎ≥ÄÏóê ÎåÄÌïú Î∞òÏùë (ÌÅ∞ Ìò∏Í∞êÎèÑ Î≥ÄÌôî)
        const subjectiveResponses = [
          "ÏßÑÏßúÏöî?! üòç Ïò§Îπ†Í∞Ä Ï†úÍ∞Ä Ìï¥Ï£ºÎäî Ìï¥Ïû•Íµ≠ÏùÑ Ï¢ãÏïÑÌï¥Ï£ºÏãúÎã§Îãà... ÎÑàÎ¨¥ ÌñâÎ≥µÌï¥Ïöî! ÏïûÏúºÎ°ú Îçî ÏûêÏ£º Ìï¥ÎìúÎ¶¥Í≤åÏöî!",
          "Í∑∏Î†áÍµ¨ÎÇò... üò≥ Í∑∏Îüº Ï†úÍ∞Ä Îçî Ïûò Ï±ôÍ≤®ÎìúÎ†§ÏïºÍ≤†Ïñ¥Ïöî! Ïò§Îπ†ÎßåÏùò Ï†ÑÏÜç ÏöîÎ¶¨ÏÇ¨Í∞Ä ÎêòÏñ¥ÎìúÎ¶¥Í≤åÏöî~ üíï",
          "Ï†ïÎßêÏöî?! ü•∞ Í∑∏Îüº Ï†ïÎßê ÏûêÏ£º Ïò¨Í≤åÏöî! Îß§ÏùºÎß§Ïùº Ïò§Îπ† Ï±ôÍ≤®ÎìúÎ¶¨Í≥† Ïã∂Ïñ¥Ïöî... Ï¢ãÏ£†?"
        ];

        if (hasNextChoice) {
          // Îã§Ïùå ÏÑ†ÌÉùÏßÄÎ°ú ÏßÑÌñâ
          const nextChoiceData = DATABASE_DATA.choices[choice_number];
          let nextChoice = null;

          if (choice_number === 1) {
            // 2Î≤àÏß∏ ÏÑ†ÌÉùÏßÄÎäî Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉùÏóê Îî∞Îùº Í≤∞Ï†ï
            const firstChoice = previous_choices[0];
            const variation = nextChoiceData.variations[firstChoice];
            if (variation) {
              nextChoice = {
                id: choice_number + 1,
                yuna_messages: variation.yuna_messages,
                options: variation.options
              };
            }
          } else if (choice_number === 2) {
            // 3Î≤àÏß∏ ÏÑ†ÌÉùÏßÄ
            nextChoice = {
              id: choice_number + 1,
              yuna_messages: nextChoiceData.yuna_messages,
              options: nextChoiceData.options
            };
          }

          return res.status(200).json({
            success: true,
            yuna_response: subjectiveResponses[choice_number - 1],
            emotion: "ecstatic",
            emotion_display: "ü§©",
            emotion_color: "#FF1493",
            affection_change: 8,
            next_choice: nextChoice,
            has_next: true,
            metadata: {
              timestamp: new Date().toISOString(),
              choice_number: choice_number + 1,
              flow_stage: 'subjective_to_next_choice'
            }
          });
        } else {
          // Î™®Îì† ÏÑ†ÌÉùÏßÄ ÏôÑÎ£å - GPTÎ°ú Ï†ÑÌôò
          return res.status(200).json({
            success: true,
            yuna_response: subjectiveResponses[choice_number - 1],
            emotion: "excited_close",
            emotion_display: "üíû",
            emotion_color: "#FF1493",
            affection_change: 10,
            switch_to_gpt: true,
            metadata: {
              timestamp: new Date().toISOString(),
              mode: 'free_chat_gpt',
              flow_stage: 'subjective_to_gpt'
            }
          });
        }
      }

      if (!choice_number || !selected_option) {
        return res.status(400).json({
          error: 'Missing required fields',
          message: 'choice_number and selected_option are required'
        });
      }

      // ÏÑ†ÌÉùÏßÄ 4Î≤àÏß∏Î∂ÄÌÑ∞Îäî GPTÎ°ú Ï†ÑÌôò Ïã†Ìò∏
      if (choice_number > 3) {
        return res.status(200).json({
          success: true,
          switch_to_gpt: true,
          message: "Ïù¥Ï†úÎ∂ÄÌÑ∞ ÏûêÏú†Î°≠Í≤å ÎåÄÌôîÌï¥Î≥¥ÏÑ∏Ïöî!",
          metadata: {
            timestamp: new Date().toISOString(),
            mode: 'free_chat_gpt'
          }
        });
      }

      const currentChoice = DATABASE_DATA.choices[choice_number - 1];
      if (!currentChoice) {
        return res.status(404).json({
          error: 'Choice not found',
          message: `Choice ${choice_number} does not exist`
        });
      }

      let options, yuna_messages;

      if (choice_number === 1) {
        // Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉù
        options = currentChoice.options;
        yuna_messages = currentChoice.yuna_messages;
      } else if (choice_number === 2) {
        // Îëê Î≤àÏß∏ ÏÑ†ÌÉù - Ï≤´ Î≤àÏß∏ ÏÑ†ÌÉùÏóê Îî∞Îùº Î∂ÑÍ∏∞
        const previous_choice = previous_choices[0];
        const variation = currentChoice.variations[previous_choice];
        if (!variation) {
          return res.status(400).json({
            error: 'Invalid previous choice',
            message: `No variation found for previous choice: ${previous_choice}`
          });
        }
        options = variation.options;
        yuna_messages = variation.yuna_messages;
      } else if (choice_number === 3) {
        // ÏÑ∏ Î≤àÏß∏ ÏÑ†ÌÉù
        options = currentChoice.options;
        yuna_messages = currentChoice.yuna_messages;
      } else if (selected_option === 'CONTINUE') {
        // Ï£ºÍ¥ÄÏãù ÏßàÎ¨∏ ÌõÑ Îã§Ïùå ÏÑ†ÌÉùÏßÄÎ°ú Ïó∞Í≤∞
        const nextChoiceData = DATABASE_DATA.choices[choice_number - 1];
        if (nextChoiceData) {
          if (choice_number === 2) {
            const previous_choice = previous_choices[0];
            const variation = nextChoiceData.variations[previous_choice];
            if (variation) {
              return res.status(200).json({
                success: true,
                next_choice: {
                  id: choice_number,
                  yuna_message: variation.yuna_message,
                  options: variation.options
                }
              });
            }
          } else {
            return res.status(200).json({
              success: true,
              next_choice: {
                id: choice_number,
                yuna_message: nextChoiceData.yuna_message,
                options: nextChoiceData.options
              }
            });
          }
        }
        return res.status(200).json({
          success: true,
          switch_to_gpt: true,
          message: "Î™®Îì† ÏÑ†ÌÉùÏßÄÎ•º ÏôÑÎ£åÌñàÏäµÎãàÎã§!"
        });
      }

      // ÏÑ†ÌÉùÎêú ÏòµÏÖò Ï∞æÍ∏∞
      const selectedOption = options.find(opt => opt.id === selected_option);
      if (!selectedOption) {
        return res.status(400).json({
          error: 'Invalid option selected',
          message: `Option ${selected_option} not found`
        });
      }

      const emotionData = DATABASE_DATA.emotions[selectedOption.emotion] || 
                         DATABASE_DATA.emotions.happy_future;

      // Í∞Å ÏÑ†ÌÉùÏßÄ ÌõÑ Ï£ºÍ¥ÄÏãù ÏßàÎ¨∏ Ï†ïÏùò
      const subjectiveQuestions = [
        "Ïò§Îπ†~ Í∂ÅÍ∏àÌïú Í≤å ÏûàÎäîÎç∞... Ï†ÄÏ≤òÎüº Ìï¥Ïû•Íµ≠ Ìï¥Ï£ºÎü¨ Ïò§Îäî ÌõÑÎ∞∞ Ïñ¥ÎïåÏöî? üò≥ ÏÜîÏßÅÌïòÍ≤å ÎßêÌï¥Ï£ºÏÑ∏Ïöî!",
        "Í∑∏Îü∞Îç∞ Ïò§Îπ†Îäî ÌèâÏÜåÏóê ÎàÑÍ∞Ä Ï±ôÍ≤®Ï§òÏöî? üòä Í∞ÄÏ°±? ÏïÑÎãàÎ©¥... Îã§Î•∏ ÎàÑÍµ∞Í∞Ä? Í∂ÅÍ∏àÌï¥Ïöî~",
        "ÎßàÏßÄÎßâ ÏßàÎ¨∏Ïù¥ÏóêÏöî! ÎßåÏïΩÏóê Ï†úÍ∞Ä ÏïûÏúºÎ°úÎèÑ ÏûêÏ£º ÏôÄÏÑú Ï±ôÍ≤®ÎìúÎ¶∞Îã§Î©¥... Ïñ¥Îñ® Í≤É Í∞ôÏïÑÏöî? üíï"
      ];

      // ÏÑ†ÌÉùÏßÄ ÏùëÎãµ ÌõÑ Î∞îÎ°ú Ï£ºÍ¥ÄÏãù ÏßàÎ¨∏ ÌëúÏãú
      const hasSubjectiveQuestion = choice_number <= 3;
      
      return res.status(200).json({
        success: true,
        yuna_response: selectedOption.response,
        emotion: selectedOption.emotion,
        emotion_display: emotionData.display,
        emotion_color: emotionData.color,
        affection_change: selectedOption.affection_change,
        subjective_question: hasSubjectiveQuestion ? {
          question: subjectiveQuestions[choice_number - 1],
          choice_number: choice_number
        } : null,
        has_subjective: hasSubjectiveQuestion,
        metadata: {
          timestamp: new Date().toISOString(),
          choice_number: choice_number,
          selected_option: selected_option,
          total_choices: 3,
          flow_stage: 'choice_response'
        }
      });

    } catch (error) {
      console.error('Choice API Error:', error);
      
      return res.status(500).json({
        error: 'Internal server error',
        message: 'ÏÑ†ÌÉùÏßÄ Ï≤òÎ¶¨Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.',
        details: process.env.NODE_ENV === 'development' ? error.message : undefined
      });
    }
  }

  return res.status(405).json({
    error: 'Method not allowed',
    message: 'Only GET and POST methods are supported'
  });
};